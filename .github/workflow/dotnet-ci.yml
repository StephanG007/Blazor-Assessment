name: .NET CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        id: build
        run: |
          set -o pipefail
          dotnet build -c Release --no-restore 2>&1 | tee build.log
          echo "exit_code=${PIPESTATUS[0]}" >> $GITHUB_OUTPUT

      - name: Report build issues as PR comments
        if: ${{ github.event_name == 'pull_request' }}
        uses: reviewdog/action-reviewdog@v1
        with:
          tool_name: dotnet-build
          reporter: github-pr-review
          level: error
          filter_mode: nofilter
          fail_on_error: false
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat build.log | reviewdog -f=msbuild -name="dotnet build" -reporter=github-pr-review -level=error || true

      - name: Run tests
        id: test
        run: |
          dotnet test -c Release --no-build --logger "trx;LogFileName=test.trx" || true

      - name: Publish test report
        if: ${{ github.event_name == 'pull_request' }}
        uses: dorny/test-reporter@v1
        with:
          name: .NET Tests
          path: "**/TestResults/*.trx"
          reporter: dotnet-trx
          fail-on-error: false

      - name: Summarize build/test results (machine-readable for Codex)
        if: ${{ github.event_name == 'pull_request' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!--BUILD-FAILURES-BEGIN-->
            {
              "buildExitCode": ${{ steps.build.outputs.exit_code }},
              "hasTestFailures": ${{ steps.test.outcome != 'success' }},
              "logPathHint": "build.log",
              "notes": "Reviewdog has added inline comments on failing lines."
            }
            <!--BUILD-FAILURES-END-->

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-logs
          path: |
            build.log
            **/TestResults/**

  autofix:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install dotnet-format
        run: dotnet tool update -g dotnet-format

      - name: Run dotnet-format (apply fixes)
        run: ~/.dotnet/tools/dotnet-format --severity info || true

      - name: Commit automatic fixes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: apply dotnet-format suggestions"
          file_pattern: .
