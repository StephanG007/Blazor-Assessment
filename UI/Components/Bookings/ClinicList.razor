@namespace UI.Components.Bookings

<MudStack Class="clinic-list">
    <MudStack Row="true" AlignItems="AlignItems.Center" Class="clinic-list__header">
        <MudAvatar Color="Color.Primary"
                   Variant="Variant.Filled"
                   Size="Size.Medium"
                   Class="clinic-list__icon">
            <MudIcon Icon="@Icons.Material.Filled.Apartment" />
        </MudAvatar>
        <MudStack>
            <MudText Typo="Typo.h5" Class="clinic-list__title">Clinics</MudText>
            <MudText Typo="Typo.body2" Class="clinic-list__subtitle">Select a clinic to view available appointment times.</MudText>
        </MudStack>
        <MudSpacer />
        <MudChip T="string" Color="Color.Secondary" Variant="Variant.Outlined" Class="clinic-list__count">
            @Clinics.Count @(" clinic" + (Clinics.Count == 1 ? string.Empty : "s"))
        </MudChip>
    </MudStack>

    <MudDivider Class="clinic-list__divider" />

    <MudGrid Spacing="2">
        @if (Clinics.Count == 0)
        {
            <MudItem xs="12">
                <MudAlert Severity="Severity.Info" Elevation="0">No clinics are available.</MudAlert>
            </MudItem>
        }
        else
        {
            @for (var i = 0; i < Clinics.Count; i++)
            {
                <MudItem xs="12" sm="6" md="4" lg="3">
                    <ClinicCard Clinic="@Clinics[i]"
                                AccentClass="@GetAccentClass(i)"
                                Selected="@IsSelected(Clinics[i])"
                                OnSelected="OnClinicSelected" />
                </MudItem>
            }
        }
    </MudGrid>
</MudStack>

@code {
    [Parameter]
    public IReadOnlyList<ClinicSummary> Clinics { get; set; } = [];

    [Parameter]
    public ClinicSummary? SelectedClinic { get; set; }

    [Parameter]
    public EventCallback<ClinicSummary?> SelectedClinicChanged { get; set; }

    private bool IsSelected(ClinicSummary clinic) => SelectedClinic?.Id == clinic.Id;

    private Task OnClinicSelected(ClinicSummary clinic) => SelectedClinicChanged.InvokeAsync(clinic);

    private static string GetAccentClass(int index) => $"clinic-card--accent-{(index % 4) + 1}";
}
